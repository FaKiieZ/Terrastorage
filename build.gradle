plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}
version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven { url "https://maven.terraformersmc.com/releases/" }
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"terrastorage" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

configurations {
	nightConfigExtract
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// NightConfig.
	nightConfigExtract implementation("com.electronwill.night-config:core:${project.night_config_version}")
	nightConfigExtract implementation("com.electronwill.night-config:toml:${project.night_config_version}")

	// ModMenu integration.
	modCompileOnly "com.terraformersmc:modmenu:${project.mod_menu_version}"

	// Expanded Storage compatibility.
	modCompileOnlyApi "maven.modrinth:expanded-storage:${project.expanded_storage_version}"
}

tasks.register("extractNightConfig", Copy) {
	from {
		configurations.nightConfigExtract.collect { zipTree(it) }
	}
	into layout.buildDirectory.dir("nightconfig")
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	dependsOn("extractNightConfig")

	from(layout.buildDirectory.dir("nightconfig")) {
		into ""
	}

	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

tasks.named("remapJar") {
	destinationDirectory = layout.buildDirectory.dir("libs/${project.minecraft_version_range}")
	archiveFileName = "${project.archives_base_name}-${project.mod_version}+${project.minecraft_version_range}.jar"
}

tasks.named("remapSourcesJar") {
	destinationDirectory = layout.buildDirectory.dir("libs/${project.minecraft_version_range}")
	archiveFileName = "${project.archives_base_name}-${project.mod_version}+${project.minecraft_version_range}-sources.jar"
}
